---
import HTML from "../icons/HTML.astro"
import NodeJS from "../icons/Node.astro"
import CSS from "../icons/CSS.astro"
import JAVASCRIPT from "../icons/JavaScript.astro"
import AWS from "../icons/AWS.astro"
import JAVA from "../icons/Java.astro"
import ANDROID from "../icons/Android.astro"
import KOTLIN from "../icons/Kotlin.astro"
import MySQL from "../icons/MySQL.astro"
import TailwindCSS from "../icons/TailwindCSS.astro"
import Link from "../icons/Link.astro"
import GitHub from "../icons/GitHub.astro"
import LinkButton from "./LinkButton.astro"

const TAGS = {
  NODE: { name: "Node.js", class: "bg-green-700 text-white", icon: NodeJS },
  HTML: { name: "HTML", class: "bg-orange-500 text-white", icon: HTML },
  CSS: { name: "CSS", class: "bg-blue-500 text-white", icon: CSS },
  JAVASCRIPT: { name: "JavaScript", class: "bg-yellow-400 text-black", icon: JAVASCRIPT },
  AWS: { name: "AWS", class: "bg-orange-300 text-black", icon: AWS },
  JAVA: { name: "Java", class: "bg-red-600 text-white", icon: JAVA },
  ANDROID: { name: "Android", class: "bg-green-500 text-white", icon: ANDROID },
  KOTLIN: { name: "Kotlin", class: "bg-purple-500 text-white", icon: KOTLIN },
  MySQL: { name: "MySQL", class: "bg-cyan-700 text-white", icon: MySQL },
  TAILWIND: { name: "Tailwind CSS", class: "bg-sky-600 text-white", icon: TailwindCSS }
}

const PROJECTS = [
  {
    title: "E-Commerce Web App",
    short: "Node.js + MySQL e-commerce platform with JWT auth, Swagger docs & testing.",
    description: `A fully functional e-commerce platform built with JavaScript, Node.js, Express, and EJS. 
    Includes:
      - User auth (JWT, role-based)
      - Sequelize ORM with MySQL
      - Swagger docs (OpenAPI)
      - Unit tests with Jest & Supertest
      - Server testing with Postman
      - Project managed with Jira.`,
    github: "*Shared upon request*",
    link: "",
    image: "/projects/pending",
    tags: [TAGS.NODE, TAGS.HTML, TAGS.CSS, TAGS.JAVASCRIPT, TAGS.MySQL]
  },
  {
    title: "PuntualApp",
    short: "Android app for employee attendance with geolocation & AWS auth.",
    description: `Built in Java for Android. Uses Google Maps API to geolocate clock-in/out.
      - AWS Amplify + Cognito auth
      - Backend: PHP on EC2 (AWS) + MySQL
      - Admin: phpMyAdmin
      - Final project for Multiplatform App Development degree.`,
    github: "https://github.com/Llarg94/PuntualApp",
    link: "",
    image: "/projects/puntualapp-foto.webp",
    tags: [TAGS.KOTLIN, TAGS.JAVA, TAGS.AWS, TAGS.ANDROID, TAGS.MySQL]
  },
  {
    title: "2D Videogame",
    short: "Arcade shooter with LibGDX and Kotlin in Android Studio.",
    description: `Developed using LibGDX and Kotlin. Features:
      - 2D gameplay with collisions, movement and shooting
      - Background music + SFX
      - Simple, polished UI
      - Level-based challenges`,
    github: "https://github.com/Llarg94/2Dgame",
    link: "",
    image: "/projects/videojuego2d.png",
    tags: [TAGS.JAVA, TAGS.ANDROID]
  }
]
---
<div class="grid gap-10">
  {
    PROJECTS.map(({ image, title, short, description, tags, link, github }, index) => (
      <article class="rounded-xl overflow-hidden shadow-lg bg-white dark:bg-gray-900 transition hover:shadow-2xl">
        <img src={image} alt={`Screenshot ${title}`} class="w-full h-56 object-cover" loading="lazy" />

        <div class="p-6 space-y-3">
          <h3 class="text-xl font-bold text-gray-900 dark:text-gray-100">{title}</h3>

          <p class="text-sm text-gray-600 dark:text-gray-300">{short}</p>

          <button class="text-sm text-blue-500 hover:underline" onclick={`document.getElementById('desc-${index}').classList.toggle('hidden')`}>
            Show more
          </button>

          <div id={`desc-${index}`} class="hidden text-sm whitespace-pre-line text-gray-700 dark:text-gray-300 mt-2">
            {description}
          </div>

          <div class="flex flex-wrap gap-2 mt-3">
            {tags.map(tag => (
              <span class={`flex items-center gap-1 text-xs font-medium px-2 py-1 rounded-full ${tag.class}`}>
                <tag.icon class="w-4 h-4" />
                {tag.name}
              </span>
            ))}
          </div>

          <footer class="flex gap-4 mt-4">
            {github && (
              <LinkButton href={github}>
                <GitHub class="size-5" />
                Code
              </LinkButton>
            )}
            {link && (
              <LinkButton href={link}>
                <Link class="size-5" />
                Preview
              </LinkButton>
            )}
          </footer>
        </div>
      </article>
    ))
  }
</div>
