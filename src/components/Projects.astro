---
import HTML from "../icons/HTML.astro"
import NodeJS from "../icons/Node.astro"
import CSS from "../icons/CSS.astro"
import JAVASCRIPT from "../icons/JavaScript.astro"
import AWS from "../icons/AWS.astro"
import JAVA from "../icons/Java.astro"
import ANDROID from "../icons/Android.astro"
import KOTLIN from "../icons/Kotlin.astro"
import MySQL from "../icons/MySQL.astro"
import TailwindCSS from "../icons/TailwindCSS.astro"
import Link from "../icons/Link.astro"
import LinkButton from "./LinkButton.astro"
import GitHub from "../icons/GitHub.astro"

const TAGS = {
    NODE:{
        name: 'NODE', 
        class: 'bg-black text-white', 
        icon: NodeJS,
    },
    HTML:{
        name: 'HTML',
        class: 'bg-black text-white',
        icon: HTML,
    },
    TAILWIND: {
        name: "Tailwind CSS",
        class: "bg-[#003159] text-white",
        icon: TailwindCSS,
    },
    CSS:{
        name: 'CSS',
        class: 'bg-black text-white',
        icon: CSS,     
    },
    JAVASCRIPT:{
        name: 'JAVASCRIPT',
        class: 'bg-black text-white',
        icon: JAVASCRIPT,     
    },
    AWS:{
        name: 'AWS',
        class: 'bg-black text-white',
        icon: AWS,     
    },
    JAVA:{
        name: 'JAVA',
        class: 'bg-black text-white',
        icon: JAVA,     
    },
    ANDROID:{
        name: 'ANDROID',
        class: 'bg-black text-white',
        icon: ANDROID,     
    },
    KOTLIN:{
        name: 'Kotlin',
        class: 'bg-black text-white',
        icon: KOTLIN,     
    },
    MySQL:{
        name: 'MySQL',
        class: 'bg-black text-white',
        icon: MySQL,     
    }
}

const PROJECTS = [
    {
        title: 'Interactive Weather App',
        description: 
        "The Interactive Weather App is a web application that allows users to check the weather of various cities in real-time. The project consists of a frontend developed in HTML, CSS, and JavaScript, and a backend built with Node.js and Express. The App is connected to an OpenSource API called OpenWeatherMap.",
        link: "",
        github: 'https://github.com/Llarg94/App-clima',
        image: '/dist/projects/appclima.webp',
        tags: [TAGS.NODE, TAGS.HTML, TAGS.CSS, TAGS.JAVASCRIPT]
    },
      {
          title: 'PuntualApp',
          description: 
          "PuntualApp is an Android app developed in Java designed for online employee attendance tracking. It registers employees' real-time location using the Google API during clock-in and clock-out. The app features a secure login authentication system powered by AWS Amplify and Cognito. Additionally, it connects to a backend hosted on an AWS EC2 server, utilizing PHP to communicate with a MySQL database. The server is equipped with phpMyAdmin for streamlined database management and interaction. Final degree project",
          link: "",
          github: 'https://github.com/Llarg94/PuntualApp',
          image: '/public/projects/puntualapp-foto.webp',
          tags: [TAGS.KOTLIN, TAGS.JAVA, TAGS.AWS, TAGS.ANDROID, TAGS.MySQL]
      },
      {
        title: 'Videogame 2D',
        description: 
        "I developed a 2D-videogame using LibGDX and Kotlin in Android Studio. The game features stylized graphics, smooth controls, and dynamic gameplay mechanics, allowing for interactions such as moving up and down, and shooting. It includes one main level with progressive challenges, as well as sound effects and background music. The game is designed to be simple and fun, providing an engaging an accessible experience for all players.",
        link: "",
        github: 'https://github.com/Llarg94/2Dgame',
        image: '/public/projects/videojuego2d.png',
        tags: [ TAGS.JAVA, TAGS.ANDROID]
    }
]
---

<div class="flex flex-col gap-y-16">
    {
      PROJECTS.map(({ image, title, description, tags, link, github }) => (
      <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
    <div class="w-full md:w-1/2">
      <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
        <img alt="Picture PuntualApp" class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image} />
      </div>
    </div>
  
    <div class="w-full md:w-1/2 md:max-w-lg">
      <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
        {title}
      </h3>
      <div class="flex flex-wrap mt-2">
        <ul class="flex flex-row mb-2 gap-x-2">
            {tags.map((tag) => (
              <li>
                <span
                  class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                >
                  <tag.icon class="size-4" />
                  {tag.name}
                </span>
              </li>
            ))}
          </ul>
  
        <div class="mt-2 text-gray-700 dark:text-gray-400">{description}</div>
        <footer class="flex items-end justify-start mt-4 gap-x-4">
            {github && (
              <LinkButton href={github}>
                <GitHub class="size-6" />
                Code
                
              </LinkButton>
            )}
            {link && (
              <LinkButton href={link}>
                <Link class="size-4" />
                Preview
              </LinkButton>
            )}
          </footer>
      </div>
    </div>
  </article>
      ))
    }
  </div>